<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whh.art.dao.mapper.CheckMapper">

	<insert id="addReceipt" useGeneratedKeys="true" keyProperty="id"  parameterType="ReceiptModel">
		insert into 
			receipt
			(memo,createUid,type)
		values
			(#{memo},#{createUid},#{type})
	</insert>

	<insert id="addCheckNode" useGeneratedKeys="true" keyProperty="id" parameterType="CheckNodeModel">
		insert into
			check_process
			(receiptId,checkUid,parentId)
		values
			(#{receiptId},#{checkUid},#{parentId})
	</insert>
	
	<update id="upadteReceipt" parameterType="ReceiptModel">
		update 
			receipt
		<set>
			lastUpdateTime = #{lastUpdateTime},
			status = #{status},
			checkMemo = #{checkMemo}
		</set>
		where id = #{id}
	</update>
	
	<update id="updateCheckProcess" parameterType="CheckNodeModel">
		update 
			check_process
		<set>
			<if test="checkTime != null and checkTime != ''">
				checkTime = #{checkTime},
			</if>
			status = #{status},
			checkMemo = #{checkMemo}
		</set>
		where id = #{id}
	</update>
	
	<select id="getReceipt" parameterType="int" resultType="ReceiptModel">
		select 
			id,memo,createTime,createUid,status,checkMemo,type,lastUpdateTime
		from 
			receipt
		where id = #{id}
	</select>
	
	<select id="getCheckNode" parameterType="int" resultType="CheckNodeModel">
		select 
			id,receiptId,checkUid,checkTime,status,checkMemo,parentId
		from
			check_process
		where id = #{id}
	</select>
	
	
	<select id="getCheckProcess" parameterType="int" resultType="CheckNodeModel">
		select 
			id,receiptId,checkUid,checkTime,status,checkMemo,parentId
		from
			check_process
		where receiptId = #{receiptId}
	</select>
	
	<select id="loadReceipts" parameterType="map" resultType="ReceiptModel">
		select 
			id,memo,createTime,createUid,status,checkMemo,type,lastUpdateTime
		from 
			receipt
		where 
			createUid = #{uid}
		and 
			status = #{search.status}
		order by
			id desc
		<if test="search.limit > 0">
			limit #{search.start},#{search.limit}
		</if>
	</select>
	
	<select id="loadMyCheckReceipts" parameterType="map" resultType="ReceiptModel">
		(select 
			r.id,r.memo,r.createTime,r.createUid,r.status,r.checkMemo,r.type,r.lastUpdateTime
		from 
			receipt r,check_process p
		where 
			r.id = p.receiptId
		and 
			p.checkUid = #{uid}
		and 
			p.status = #{search.status}
		and 
			p.parentId = 0 )
		UNION ALL 
		(select 
			r.id,r.memo,r.createTime,r.createUid,r.status,r.checkMemo,r.type,r.lastUpdateTime
		from 
			receipt r,check_process p,check_process p1
		where 
			r.id = p.receiptId
		and 
			p.checkUid = #{uid}
		and 
			p.status = #{search.status}
		and 
			p.parentId = p1.id and p1.status = 1)
		order by id asc
	</select>
	
	<select id="countReceipts" parameterType="map" resultType="int">
		select 
			count(*)
		from 
			receipt
		where 
			uid = #{uid}
		and 
			status = #{search.status}
	</select>
	
	<insert id="insertCheckDetail" parameterType="CheckDetailModel" useGeneratedKeys="true" keyProperty="id">
		insert into 
			check_detail
			(artName,artNumber,artInnerNumber,artYear,artAuthor,artMaterial,artSize,artCert,artDesc,createTime,artImage,artAudio,
			type,come,createUid,receiptId)
		values
			(#{artName},#{artNumber},#{artInnerNumber},#{artYear},#{artAuthor},#{artMaterial},#{artSize},#{artCert},#{artDesc},now(),#{artImage},#{artAudio},
			#{type},#{come},#{createUid},#{receiptId})
	</insert>
	
	
	<select id="getCheckDetail" parameterType="String" resultType="CheckDetailModel">
		select
			id,artName,artNumber, artInnerNumber,artImage,artAudio,artYear,artAuthor,artSize,artMaterial,artCert,artDesc
		from 
			check_detail 
		where
			artNumber = #{artNumber}
	</select>
	
	<select id="searchCheckDetail" parameterType="SearchModel" resultType="ArtModel">
		select
			a.id,a.artName,a.artNumber,a.artInnerNumber,a.artImage,a.artAudio,a.artYear,a.artAuthor,a.artSize,a.artMaterial,a.artCert,a.artDesc
		from 
			check_detail a 
		<where>
			<if test="batchId > 0">
				a.receiptId = #{batchId}
			</if>
			<if test="name != null and name != ''">
				and a.artName like CONCAT('%', #{name}, '%') 
			</if>
			<if test="number != null and number != ''">
				and a.artNumber like CONCAT(#{number}, '%') 
			</if>
			<if test="innerNumber != null and innerNumber != ''">
				and a.artInnerNumber like CONCAT(#{innerNumber}, '%') 
			</if>
			<if test="id > 0">
				and a.id = #{id}
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
			<if test="beginDate != null">
				and a.createTime > #{beginDate}
			</if>
			<if test="endDate != null">
				and #{endDate} > a.createTime
			</if>
		</where>
			limit #{start}, #{limit}
	</select>
	
	<select id="countCheckDetail" parameterType="SearchModel" resultType="int">
		select
			count(a.id)
		from 
			check_detail a 
		<where>
			<if test="batchId > 0">
				a.receiptId = #{batchId}
			</if>
			<if test="name != null and name != ''">
				and a.artName like CONCAT('%', #{name}, '%') 
			</if>
			<if test="number != null and number != ''">
				and a.artNumber like CONCAT(#{number}, '%') 
			</if>
			<if test="innerNumber != null and innerNumber != ''">
				and a.artInnerNumber like CONCAT(#{innerNumber}, '%') 
			</if>
			<if test="id > 0">
				and a.id = #{id}
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
			<if test="beginDate != null">
				and a.createTime > #{beginDate}
			</if>
			<if test="endDate != null">
				and #{endDate} > a.createTime
			</if>
		</where>
	</select>
</mapper>