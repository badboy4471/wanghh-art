<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whh.art.dao.mapper.AdminMapper">

	<select id="getAdmin" resultType="AdminModel" parameterType="String">
		select
			id,userName,password,createTime
		from 
			admin 
		where
			userName = #{userName}
	</select>


	<select id="getAdminById" resultType="AdminModel" parameterType="int">
		select
			id,userName,password,createTime
		from 
			admin 
		where
			id = #{id}
	</select>

	<insert id="insertAdmin" parameterType="AdminModel">
		insert into 
			admin
			(userName,password,createTime)
		values
			(#{userName},#{password},#{createTime})
	</insert>

	<update id="updateAdmin" parameterType="AdminModel">
		update 
			admin
			
		<set>
			<if test="userName != null and userName != ''">
				userName = #{userName},
			</if>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<insert id="insertUser" parameterType="UserModel">
		insert into 
			users (openId,nickname,sex,language,city,province,country,
			headImgUrl,subscribeTime,unionId,sexId,remark,groupId)
		values
			(#{openId},#{nickname},#{sex},#{language},#{city},#{province},#{country}
			,#{headImgUrl},#{subscribeTime},#{unionId},#{sexId},#{remark},#{groupId})
	</insert>
	
	<delete id="deleteUser" parameterType="String" >
		delete from users where openId = #{openid}
	</delete>
	
	<select id="getUser" parameterType="String" resultType="UserModel">
		select 
			id,openId,nickname,sex,language,city,province,country,
			headImgUrl,subscribeTime,unionId,sexId,remark,groupId
		from
			users
		where openid = #{openid}
	</select> 
	
	<select id="loadUsers" parameterType="SearchModel" resultType="UserModel">
		select 
			id,openId,nickname,sex,language,city,province,country,
			headImgUrl,subscribeTime,unionId,sexId,remark,groupId
		from
			users
		<where>
			<if test="number != null and number != ''">
				and openId = #{number}
			</if>
			<if test="name != null and name != ''">
				and nickname like #{name}
			</if>
		</where>
		order by id desc limit #{start}, #{limit}
	</select>
	
	<select id="countUsers" parameterType="SearchModel" resultType="int">
		select 
			count(*)
		from
			users
		<where>
			<if test="number != null and number != ''">
				and openId = #{number}
			</if>
			<if test="name != null and name != ''">
				and nickname like #{name}
			</if>
		</where>
	</select>
</mapper>